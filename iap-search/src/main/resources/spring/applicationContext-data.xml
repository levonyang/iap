<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <bean id="parentDataSource" abstract="true" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="maxActive" value="30"/>
        <property name="maxWait" value="3000"/>
        <property name="minIdle" value="10"/>
        <property name="maxIdle" value="15"/>
        <property name="testWhileIdle" value="true"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    
    <bean id="dataSource" parent="parentDataSource" primary="true">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${iap.mysql.url}"/>
        <property name="username" value="${iap.mysql.username}"/>
        <property name="password" value="${iap.mysql.password}"/>
    </bean>
    
    <bean id="configJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" primary="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dcStoreDataSource" parent="parentDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${dcstore.mysql.url}"/>
        <property name="username" value="${dcstore.mysql.username}"/>
        <property name="password" value="${dcstore.mysql.password}"/>
    </bean>

    <bean id="dcStoreJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dcStoreDataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="objectMapper" class="com.haizhi.iap.search.factory.ObjectMapperFactory" factory-method="get"/>

    <bean id="appMongo" class="com.haizhi.iap.common.factory.MongoFactory" factory-method="get">
        <constructor-arg value="${app.mongodb.uri}"/>
    </bean>

    <bean id="bizMongo" class="com.haizhi.iap.common.factory.MongoFactory" factory-method="get">
        <constructor-arg value="${biz.mongodb.uri}"/>
    </bean>

    <!--<mongo:mongo-client host="${mongo.host}" port="${mongo.port}">-->
        <!--<mongo:client-options-->
                <!--connections-per-host="${mongo.connectionsPerHost}"-->
                <!--threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"-->
                <!--connect-timeout="${mongo.connectTimeout}"-->
                <!--max-wait-time="${mongo.maxWaitTime}"-->
                <!--auto-connect-retry="${mongo.autoConnectRetry}"-->
                <!--socket-keep-alive="${mongo.socketKeepAlive}"-->
                <!--socket-timeout="${mongo.socketTimeout}"-->
                <!--slave-ok="${mongo.slaveOk}"-->
                <!--write-number="1"-->
                <!--write-timeout="0"-->
                <!--write-fsync="true"/>-->
    <!--</mongo:mongo-client>-->

    <!--<mongo:db-factory dbname="database" mongo-ref="mongoClient"/>-->

    <!--<bean id="anotherMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">-->
        <!--<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>-->
    <!--</bean>-->

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
    </bean>

    <bean id="jedis" class="com.haizhi.iap.common.factory.JedisPoolFactory" factory-method="get">
        <constructor-arg ref="poolConfig"/>
        <constructor-arg type="java.lang.String" value="${redis.host}"/>
        <constructor-arg value="${redis.port}"/>
        <constructor-arg value="${redis.timeout}"/>
        <constructor-arg value="${redis.password}"/>
    </bean>

    <bean id="whiteList" class="com.haizhi.iap.common.utils.ConfUtil" factory-method="getConfList">
        <constructor-arg value="white_list.conf"/>
    </bean>

    <bean id="graphParamsInput" class="com.haizhi.iap.common.utils.ConfUtil" factory-method="getInputStream">
        <constructor-arg value="graph_params.json"/>
    </bean>

    <bean id="supportCurrencyList" class="com.haizhi.iap.common.utils.ConfUtil" factory-method="getConfList">
        <constructor-arg value="support_currency_list.conf"/>
    </bean>

    <bean id="userSessionRepo" class="com.haizhi.iap.common.auth.UserSessionRepo">
        <property name="jedisPool" ref="jedis"/>
    </bean>
</beans>